CREATE TABLE IF NOT EXISTS mpa (
	id     INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	motion VARCHAR NOT NULL
);

CREATE TABLE IF NOT EXISTS genre (
	id    INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	genre VARCHAR NOT NULL
);

CREATE TABLE IF NOT EXISTS film (
	film_id      INTEGER      GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	name         VARCHAR      NOT NULL,
	description  VARCHAR(200) NOT NULL,
	duration     INTEGER      NOT NULL,
	release_date TIMESTAMP    NOT NULL,
	mpa          INTEGER,
	CONSTRAINT film_fk FOREIGN KEY (mpa) REFERENCES mpa(id)
);

CREATE TABLE IF NOT EXISTS film_genre_id (
	film_id  INTEGER NOT NULL,
	genre_id INTEGER,
	CONSTRAINT film_genre_id_fk FOREIGN KEY (film_id) REFERENCES film(film_id),
	CONSTRAINT film_genre_id_fk1 FOREIGN KEY (genre_id) REFERENCES genre(id)
);

CREATE TABLE IF NOT EXISTS users (
	user_id  INTEGER   GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	login    VARCHAR   NOT NULL,
	name     VARCHAR   NOT NULL,
	email    VARCHAR   NOT NULL,
	birthday TIMESTAMP NOT NULL
);

CREATE TABLE IF NOT EXISTS likes (
	film_id INTEGER,
	user_id INTEGER,
	CONSTRAINT likes_fk FOREIGN KEY (film_id) REFERENCES film(film_id),
	CONSTRAINT likes_fku FOREIGN KEY (user_id) REFERENCES users(user_id)
);

CREATE TABLE IF NOT EXISTS friendship (
	user_id    INTEGER NOT NULL,
	friends_id INTEGER,
	is_status  VARCHAR,
	CONSTRAINT user_fk FOREIGN KEY (user_id) REFERENCES users(user_id),
	CONSTRAINT friend_fk FOREIGN KEY (friends_id) REFERENCES users(user_id)
);
